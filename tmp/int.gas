	.file	"int.c"
	.text
	.balign 2
.globl _init_pic
	.def	_init_pic;	.scl	2;	.type	32;	.endef
_init_pic:
	pushl	%ebp
	movl	%esp, %ebp
	subl	$8, %esp
	subl	$8, %esp
	pushl	$255
	pushl	$33
	call	_io_out8
	addl	$16, %esp
	subl	$8, %esp
	pushl	$255
	pushl	$161
	call	_io_out8
	addl	$16, %esp
	subl	$8, %esp
	pushl	$17
	pushl	$32
	call	_io_out8
	addl	$16, %esp
	subl	$8, %esp
	pushl	$32
	pushl	$33
	call	_io_out8
	addl	$16, %esp
	subl	$8, %esp
	pushl	$4
	pushl	$33
	call	_io_out8
	addl	$16, %esp
	subl	$8, %esp
	pushl	$1
	pushl	$33
	call	_io_out8
	addl	$16, %esp
	subl	$8, %esp
	pushl	$17
	pushl	$160
	call	_io_out8
	addl	$16, %esp
	subl	$8, %esp
	pushl	$40
	pushl	$161
	call	_io_out8
	addl	$16, %esp
	subl	$8, %esp
	pushl	$2
	pushl	$161
	call	_io_out8
	addl	$16, %esp
	subl	$8, %esp
	pushl	$1
	pushl	$161
	call	_io_out8
	addl	$16, %esp
	subl	$8, %esp
	pushl	$251
	pushl	$33
	call	_io_out8
	addl	$16, %esp
	subl	$8, %esp
	pushl	$255
	pushl	$161
	call	_io_out8
	addl	$16, %esp
	leave
	ret
	.data
LC0:
	.ascii "INT 21 (TRQ-1) : PS/2 keyboard\0"
	.text
	.balign 2
.globl _inthandler21
	.def	_inthandler21;	.scl	2;	.type	32;	.endef
_inthandler21:
	pushl	%ebp
	movl	%esp, %ebp
	subl	$8, %esp
	movl	$4080, -4(%ebp)
	subl	$4, %esp
	pushl	$15
	pushl	$255
	pushl	$0
	pushl	$0
	pushl	$0
	movl	-4(%ebp), %eax
	movswl	4(%eax),%eax
	pushl	%eax
	movl	-4(%ebp), %eax
	pushl	8(%eax)
	call	_boxfill8
	addl	$32, %esp
	subl	$8, %esp
	pushl	$LC0
	pushl	$7
	pushl	$0
	pushl	$0
	movl	-4(%ebp), %eax
	movswl	4(%eax),%eax
	pushl	%eax
	movl	-4(%ebp), %eax
	pushl	8(%eax)
	call	_putfonts8_asc
	addl	$32, %esp
	call	_io_hlt
	leave
	ret
	.data
LC1:
	.ascii "INT 2c (TRQ-12) : PS/2 mouse\0"
	.text
	.balign 2
.globl _inthandler2c
	.def	_inthandler2c;	.scl	2;	.type	32;	.endef
_inthandler2c:
	pushl	%ebp
	movl	%esp, %ebp
	subl	$8, %esp
	movl	$4080, -4(%ebp)
	subl	$4, %esp
	pushl	$15
	pushl	$255
	pushl	$0
	pushl	$0
	pushl	$0
	movl	-4(%ebp), %eax
	movswl	4(%eax),%eax
	pushl	%eax
	movl	-4(%ebp), %eax
	pushl	8(%eax)
	call	_boxfill8
	addl	$32, %esp
	subl	$8, %esp
	pushl	$LC1
	pushl	$7
	pushl	$0
	pushl	$0
	movl	-4(%ebp), %eax
	movswl	4(%eax),%eax
	pushl	%eax
	movl	-4(%ebp), %eax
	pushl	8(%eax)
	call	_putfonts8_asc
	addl	$32, %esp
	call	_io_hlt
	leave
	ret
	.balign 2
.globl _inthandler27
	.def	_inthandler27;	.scl	2;	.type	32;	.endef
_inthandler27:
	pushl	%ebp
	movl	%esp, %ebp
	subl	$8, %esp
	subl	$8, %esp
	pushl	$103
	pushl	$32
	call	_io_out8
	addl	$16, %esp
	leave
	ret
	.def	_io_hlt;	.scl	2;	.type	32;	.endef
	.def	_putfonts8_asc;	.scl	2;	.type	32;	.endef
	.def	_boxfill8;	.scl	2;	.type	32;	.endef
	.def	_io_out8;	.scl	2;	.type	32;	.endef
